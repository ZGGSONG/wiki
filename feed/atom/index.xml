<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="zh-CN"><id>/wiki/</id><title>艾芝士</title><updated>2020-07-14T04:54:40.107139+08:06</updated><author><name>ZGGSONG</name><email>zggsong@foxmail.com</email></author><link href="/wiki/" rel="alternate"/><generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator><logo>https://cdn.jsdelivr.net/gh/ZGGSONG/wiki@gh-pages/logo.png</logo><subtitle>简单的记录学习.</subtitle><entry><id>/wiki/archives/a-interesting-story/</id><title>安装deb包</title><updated>2020-07-14T04:54:40.107262+00:00</updated><author><name>SWJ</name><email>zggsong@foxmail.com</email><uri>https://www.zggsong.cn</uri></author><content>&lt;p&gt;以&lt;code&gt;manjaro&lt;/code&gt;为例&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;检查有没有安装 debtap&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo pacman -Q debtap
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;没有就安装&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;yaourt -S debtap
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;升级debtap&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo debtap -u
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;使用方法&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo debtap  xxxx.deb
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;安装时会提示输入包名，以及license。包名随意，license就填GPL吧
上述操作完成后会在deb包同级目录生成×.tar.xz文件，直接用pacman安装即可&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo pacman -U x.tar.xz
&lt;/pre&gt;&lt;/div&gt;
</content><link href="/wiki/archives/a-interesting-story/" rel="alternate"/><published>2019-11-19T00:27:00+08:06</published></entry><entry><id>/wiki/archives/a-interesting-story/</id><title>Java约瑟夫环问题</title><updated>2020-07-14T04:54:40.107214+00:00</updated><author><name>ZGGSONG</name><email>zggsong@foxmail.com</email><uri>https://www.zggsong.cn</uri></author><content>&lt;p&gt;&lt;a href="https://zh.wikipedia.org/wiki/%E7%BA%A6%E7%91%9F%E5%A4%AB%E6%96%AF%E9%97%AE%E9%A2%98"&gt;约瑟夫环问题&lt;/a&gt;：人们站在一个等待被处决的圈子里。 计数从圆圈中的指定点开始，并沿指定方向围绕圆圈进行。 在跳过指定数量的人之后，执行下一个人。 对剩下的人重复该过程，从下一个人开始，朝同一方向跳过相同数量的人，直到只剩下一个人，并被释放。&lt;/p&gt;
&lt;h2&gt;例题&lt;/h2&gt;
&lt;blockquote&gt;&lt;p&gt;设有n个人围坐一圈并按顺时针方向从1到n编号，从第1个人开始进行1到m的报数，报数到第个m人，此人出圈，再从他的下一个人重新开始1到m的报数，如此进行下去直到所剩下一人为止。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;解决方法：&lt;code&gt;LinkedList&lt;/code&gt; + &lt;code&gt;Iterator&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;&lt;ul&gt;
&lt;li&gt;LinkedList类是双向链表,列表中的每个节点都包含了对前一个和后一个元素的引用&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;Iterator是Java迭代器最简单的实现，为List设计的ListIterator具有更多的功能，它可以从两个方向遍历List，也可以从List中插入和删除元素&lt;ul&gt;
&lt;li&gt;hasNext:没有指针下移操作，只是判断是否存在下一个元素&lt;/li&gt;
&lt;li&gt;next：指针下移，返回该指针所指向的元素&lt;/li&gt;
&lt;li&gt;remove：删除当前指针所指向的元素，一般和next方法一起用，这时候的作用就是删除next方法返回的元素&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h2&gt;代码&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;public static void main(String[] args) {
        int n = 10, m = 3;
        LinkedList&amp;lt;Integer&amp;gt; L = new LinkedList&amp;lt;&amp;gt;();
        for (int i = 1; i &amp;lt;= n; i++) L.add(i);
        Iterator&amp;lt;Integer&amp;gt; iterator = L.iterator();
        while (L.size() &amp;gt; 1) {
            for (int cnt = 0; cnt &amp;lt; m; cnt++) {
                if (iterator.hasNext())
                    iterator.next();
                else {
                    iterator = L.iterator();
                    iterator.next();
                }
            }
            iterator.remove();
        }
        System.out.println("The last one is: " + L.getFirst());
    }&lt;/code&gt;&lt;/pre&gt;
</content><link href="/wiki/archives/a-interesting-story/" rel="alternate"/><published>2020-07-14T01:46:00+08:06</published></entry></feed>